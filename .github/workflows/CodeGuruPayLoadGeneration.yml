permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read 

name: CodeGuru Analysis and Upload Results

# Manual trigger with workflow_dispatch
on:
  workflow_dispatch:

jobs:
  codeguru:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Check out the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials for CodeGuru
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Trigger CodeGuru Reviewer to analyze the repository
      - name: Trigger CodeGuru Review
        run: |
          aws codeguru-reviewer create-code-review \
            --name specific-file-analysis \
            --repository-association-arn arn:aws:codeguru-reviewer:us-east-1:008971672094:association:4b8922f2-0794-4a26-873e-48efdb9bfd49 \
            --type '{"RepositoryAnalysis": {"RepositoryHead": {"BranchName": "dev"}}}' \
            --region us-east-1 \
            --debug

      # Step 4: Wait for CodeGuru Review to Complete
      - name: Wait for CodeGuru Review to Complete
        run: |
          echo "Waiting for CodeGuru review to complete..."
          sleep 140

      # Step 5: Get the Most Recent CodeGuru Review ARN
      - name: Get the Most Recent CodeGuru Review ARN
        id: get_arn
        run: |
          REVIEW_ARN=$(aws codeguru-reviewer list-code-reviews \
            --query 'codeReviews[?state==`Completed`].codeReviewArn' \
            --output text | head -n 1)
          
          if [ -z "$REVIEW_ARN" ]; then
            echo "No CodeGuru review found."
            exit 1
          fi

          echo "REVIEW_ARN=$REVIEW_ARN" >> $GITHUB_ENV

      # Step 6: Fetch the CodeGuru Results
      - name: Fetch CodeGuru Results
        run: |
          if [ -z "${{ env.REVIEW_ARN }}" ]; then
            echo "No CodeGuru review ARN found. Exiting."
            exit 1
          fi

          aws codeguru-reviewer get-recommendations \
            --code-review-arn ${{ env.REVIEW_ARN }} \
            --output json > codeguru_results.json

      # Step 7: Commit the results back to the GitHub repository
      - name: Commit CodeGuru Results to GitHub
        run: |
          if [ -f codeguru_results.json ]; then
            git config --global user.email "actions@github.com"
            git config --global user.name "GitHub Actions"
            git add codeguru_results.json
            git commit -m "Add CodeGuru analysis results"
            git push origin ${{ github.ref }}
          else
            echo "File codeguru_results.json does not exist."
            exit 1
          fi

      # Step 8: Upload the results to GitHub as an artifact (optional)
      - name: Upload Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: codeguru-results
          path: codeguru_results.json

          

